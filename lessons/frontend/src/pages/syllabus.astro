---
import Layout from '../layouts/Layout.astro';

// Fetch syllabus data
const API_BASE = 'http://localhost:8080/api';
let syllabusData = null;

try {
  const response = await fetch(`${API_BASE}/syllabus`);
  if (response.ok) {
    syllabusData = await response.json();
  }
} catch (error) {
  console.error('Failed to fetch syllabus data:', error);
}

// Default program outcomes
const defaultOutcomes = [
  "Build and maintain websites.",
  "Work with stakeholders to create websites.",
  "Research, assess, and appropriately apply emerging technology to support websites as needed in industry.",
  "Comply with the ethics related to the use of copyrighted materials and intellectual property rights.",
  "Demonstrate an entrepreneurial approach to web development sites and pages.",
  "Manage career goals through creating effective resumes/CVs, developing interviewing skills, and setting goals."
];

const outcomes = syllabusData?.course?.requirements || defaultOutcomes;
---

<Layout title="Course Syllabus">
  <div class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
    <div class="max-w-7xl mx-auto px-6 py-12">
      
      <!-- Header Section -->
      <div class="text-center mb-12">
        <h1 class="text-5xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-6">
          Web Application Developer Certificate
        </h1>
        <p class="text-xl text-gray-600 max-w-4xl mx-auto">
          Complete program requirements, outcomes, and course information for the Web Application Developer Certificate program.
        </p>
      </div>

      <!-- Program Requirements Section -->
      <div class="bg-white rounded-3xl shadow-xl p-8 mb-12">
        <div class="text-center mb-8">
          <h2 class="text-4xl font-bold text-gray-800 mb-4">Program Requirements</h2>
          <div class="inline-flex items-center bg-blue-100 text-blue-800 text-lg font-semibold px-6 py-3 rounded-full">
            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z" clip-rule="evenodd"></path>
            </svg>
            44 Credits Total
          </div>
        </div>

        <!-- Program Outcomes -->
        <div class="mb-10">
          <h3 class="text-2xl font-bold text-gray-800 mb-6 flex items-center">
            <svg class="w-6 h-6 mr-3 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"></path>
            </svg>
            Program Outcomes
          </h3>
          
          <div class="grid md:grid-cols-2 gap-6">
            <div class="space-y-4">
              {outcomes.slice(0, Math.ceil(outcomes.length / 2)).map((outcome, index) => (
                <div class="flex items-start">
                  <div class="bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center text-sm font-bold mr-4 mt-1 flex-shrink-0">{index + 1}</div>
                  <p class="text-gray-700">{outcome}</p>
                </div>
              ))}
            </div>
            <div class="space-y-4">
              {outcomes.slice(Math.ceil(outcomes.length / 2)).map((outcome, index) => (
                <div class="flex items-start">
                  <div class="bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center text-sm font-bold mr-4 mt-1 flex-shrink-0">{Math.ceil(outcomes.length / 2) + index + 1}</div>
                  <p class="text-gray-700">{outcome}</p>
                </div>
              ))}
            </div>
          </div>
        </div>

        <!-- Course Requirements -->
        <div class="mb-10">
          <h3 class="text-2xl font-bold text-gray-800 mb-6 flex items-center">
            <svg class="w-6 h-6 mr-3 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
            </svg>
            Required Courses
          </h3>
          
          <div class="bg-gray-50 rounded-xl p-6">
            <ul class="space-y-3 text-gray-800">
              <li class="flex justify-between items-center hover:bg-white p-3 rounded-lg transition-colors">
                <span>
                  <strong>CIS 241 - Web Development I</strong>
                  <button 
                    data-course="cis241"
                    class="course-detail-btn ml-3 text-blue-600 hover:text-blue-800 text-sm underline"
                  >
                    View Details
                  </button>
                </span>
                <span class="font-semibold text-blue-600">5.0 Credits</span>
              </li>
              <li class="flex justify-between items-center hover:bg-white p-3 rounded-lg transition-colors">
                <span>
                  <strong>CIS 242 - Web Development II: JavaScript and jQuery</strong>
                  <button 
                    data-course="cis242"
                    class="course-detail-btn ml-3 text-blue-600 hover:text-blue-800 text-sm underline"
                  >
                    View Details
                  </button>
                </span>
                <span class="font-semibold text-blue-600">5.0 Credits</span>
              </li>
              <li class="flex justify-between items-center hover:bg-white p-3 rounded-lg transition-colors">
                <span>
                  <strong>CIS 243 - Web Development III: Server-Side Scripting</strong>
                  <button 
                    data-course="cis243"
                    class="course-detail-btn ml-3 text-blue-600 hover:text-blue-800 text-sm underline"
                  >
                    View Details
                  </button>
                </span>
                <span class="font-semibold text-blue-600">5.0 Credits</span>
              </li>
              <li class="flex justify-between items-center hover:bg-white p-3 rounded-lg transition-colors">
                <span>
                  <strong>CIS 244 - Web Development IV: Introduction to JavaScript Frameworks</strong>
                  <button 
                    data-course="cis244"
                    class="course-detail-btn ml-3 text-blue-600 hover:text-blue-800 text-sm underline"
                  >
                    View Details
                  </button>
                </span>
                <span class="font-semibold text-blue-600">5.0 Credits</span>
              </li>
              <li class="flex justify-between items-center hover:bg-white p-3 rounded-lg transition-colors">
                <span>
                  <strong>CIS 245 - Web Development V: Introduction to CSS</strong>
                  <button 
                    data-course="cis245"
                    class="course-detail-btn ml-3 text-blue-600 hover:text-blue-800 text-sm underline"
                  >
                    View Details
                  </button>
                </span>
                <span class="font-semibold text-blue-600">5.0 Credits</span>
              </li>
              <li class="flex justify-between items-center hover:bg-white p-3 rounded-lg transition-colors">
                <span>
                  <strong>CIS 246 - Web Dev VI: JavaScript Frameworks</strong>
                  <button 
                    data-course="cis246"
                    class="course-detail-btn ml-3 text-blue-600 hover:text-blue-800 text-sm underline"
                  >
                    View Details
                  </button>
                </span>
                <span class="font-semibold text-blue-600">5.0 Credits</span>
              </li>
              <li class="flex justify-between items-center hover:bg-white p-3 rounded-lg transition-colors">
                <span>
                  <strong>CIS 291 - Technology Internship</strong> 
                  <em class="text-orange-600">Take 4 credits</em>
                  <button 
                    data-course="cis291"
                    class="course-detail-btn ml-3 text-blue-600 hover:text-blue-800 text-sm underline"
                  >
                    View Details
                  </button>
                </span>
                <span class="font-semibold text-blue-600">4.0 Credits</span>
              </li>
              <li class="flex justify-between items-center hover:bg-white p-3 rounded-lg transition-colors">
                <span>
                  <strong>CS 115 - Principles of Computer Science</strong>
                  <button 
                    data-course="cs115"
                    class="course-detail-btn ml-3 text-blue-600 hover:text-blue-800 text-sm underline"
                  >
                    View Details
                  </button>
                </span>
                <span class="font-semibold text-blue-600">5.0 Credits</span>
              </li>
              <li class="flex justify-between items-center hover:bg-white p-3 rounded-lg transition-colors">
                <span>
                  <strong>ART 225 - Introduction to Graphic Design</strong>
                  <button 
                    data-course="art225"
                    class="course-detail-btn ml-3 text-blue-600 hover:text-blue-800 text-sm underline"
                  >
                    View Details
                  </button>
                </span>
                <span class="font-semibold text-blue-600">5.0 Credits</span>
              </li>
            </ul>
            
            <div class="mt-6 pt-4 border-t border-gray-300">
              <div class="flex justify-between items-center text-lg font-bold">
                <span class="text-gray-800">Total Credits:</span>
                <span class="text-green-600">44.0 Credits</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Weekly Schedule (if lessons are available) -->
      {syllabusData && syllabusData.weeks && syllabusData.weeks.length > 0 && (
        <div class="bg-white rounded-3xl shadow-xl p-8">
          <h2 class="text-3xl font-bold text-gray-800 mb-8 text-center">Weekly Course Schedule</h2>
          <div class="space-y-4">
            {Array.from({length: 10}, (_, i) => {
              const week = i + 1;
              const lesson = syllabusData?.lessons?.[week];
              const isAvailable = lesson !== undefined;
              
              return (
                <div class={`border rounded-xl p-6 transition-all duration-200 ${
                  isAvailable 
                    ? 'border-green-200 bg-green-50 hover:bg-green-100' 
                    : 'border-gray-200 bg-gray-50'
                }`}>
                  <div class="flex items-center justify-between">
                    <div class="flex-1">
                      <h3 class={`text-lg font-semibold mb-2 ${
                        isAvailable ? 'text-green-800' : 'text-gray-500'
                      }`}>
                        Week {week}: {lesson?.title || 'Lesson Coming Soon'}
                      </h3>
                      
                      {lesson?.description && (
                        <p class="text-gray-700 mb-3">{lesson.description}</p>
                      )}
                      
                      {!isAvailable && (
                        <p class="text-gray-500 text-sm">This lesson is not yet available</p>
                      )}
                      
                      {lesson?.created_at && (
                        <p class="text-sm text-gray-600">
                          Last updated: {new Date(lesson.created_at).toLocaleDateString()}
                        </p>
                      )}
                    </div>
                    
                    <div class="ml-6">
                      {isAvailable ? (
                        <a 
                          href={`/lessons/${week}`}
                          class="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors font-semibold"
                        >
                          View Lesson
                        </a>
                      ) : (
                        <div class="bg-gray-300 text-gray-500 px-6 py-3 rounded-lg cursor-not-allowed font-semibold">
                          Not Available
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              );
            })}
          </div>

          <!-- Course Statistics -->
          {syllabusData && (
            <div class="mt-12 pt-8 border-t">
              <h2 class="text-2xl font-bold text-gray-800 mb-6 text-center">Course Progress</h2>
              <div class="grid md:grid-cols-3 gap-6">
                <div class="bg-blue-100 p-6 rounded-xl text-center">
                  <div class="text-3xl font-bold text-blue-800">
                    {syllabusData.weeks?.length || 0}
                  </div>
                  <div class="text-blue-600 font-medium">Lessons Available</div>
                </div>
                <div class="bg-green-100 p-6 rounded-xl text-center">
                  <div class="text-3xl font-bold text-green-800">
                    {Math.round(((syllabusData.weeks?.length || 0) / 10) * 100)}%
                  </div>
                  <div class="text-green-600 font-medium">Course Complete</div>
                </div>
                <div class="bg-purple-100 p-6 rounded-xl text-center">
                  <div class="text-3xl font-bold text-purple-800">10</div>
                  <div class="text-purple-600 font-medium">Total Weeks</div>
                </div>
              </div>
            </div>
          )}
        </div>
      )}

      <!-- Course Details Modal -->
      <div id="courseModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4">
        <div class="bg-white rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden">
          <div class="bg-gradient-to-r from-blue-600 to-purple-600 text-white p-6 flex justify-between items-center">
            <h2 id="modalTitle" class="text-2xl font-bold">Course Details</h2>
            <button id="closeModalBtn" class="text-white hover:text-gray-200 text-2xl font-bold">&times;</button>
          </div>
          <div class="p-6 overflow-y-auto max-h-[calc(90vh-120px)]">
            <div id="modalContent" class="space-y-6">
              <!-- Course content will be inserted here -->
            </div>
            <div class="mt-6 pt-4 border-t border-gray-200 flex gap-4">
              <button class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                Add to Personal Catalog
              </button>
              <button class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors">
                Add to My Favorites
              </button>
              <button class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors">
                Share this Page
              </button>
              <button id="printBtn" class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition-colors">
                Print
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  // Course details data
  const courseDetails = {
    cis241: {
      title: "CIS 241 - Web Development I",
      credits: "5.0 Credits",
      description: "Website development using current HTML languages, approached from a source code perspective. Covers tags, forms, linked objects, current CSS, frames, tables, and an introduction to scripting. Students will build multi-page websites using GUI editors, Git and GitHub. URL: https://catalog.edmonds.edu/preview_program.php?catoid=68&poid=17918&hl=cis&returnto=search",
      prerequisite: "CIS 100 or instructor permission",
      objectives: [
        "Perform content design and technical analysis on web applications and websites.",
        "Use current HTML to develop, debug, maintain, and document web applications and websites.", 
        "Compare and contrast different browsers' effects on current HTML documents.",
        "Use current HTML forms, iframes, and tables.",
        "Create current HTML style through inline, embedded, and Cascading Style Sheets."
      ],
      offered: "Fall"
    },
    cis242: {
      title: "CIS 242 - Web Development II: JavaScript and jQuery",
      credits: "5.0 Credits",
      description: "Students will explore the topics of embedding, inline and external scripts, functions, form validation, loops, conditional statements, strings, numbers, and DHTML. Students will get an introduction to JavaScript Frameworks and create websites using the most current Frameworks. Students will build multi-page websites using JavaScript Frameworks and technologies.",
      prerequisite: "CIS 241 with a minimum grade of 2.5 or instructor permission.",
      objectives: [
          "Use object-oriented client-side scripting with well-formed web pages.",
          "Recognize client-side variables and data types and the operations that can be performed on them.",
          "Write client-side functions, event handlers, and control structures.",
          "Verify form data through scripting validation.",
          "Save state information through the use of hidden form fields, query-strings, and cookies.",
          "List the concepts of server-side programming and Node.js."
      ],
      offered: "Winter"
    },
    cis243: {
      title: "CIS 243 - Web Development III: Server-Side Scripting",
      credits: "5.0 Credits", 
      description: "Topics include server-side scripting for web pages. Students will learn fundamentals of server-side scripting including functions, logical structure, and database connectivity used in creating websites. Other topics include Object-Oriented principles, relational databases, and web frameworks.",
      prerequisite: "CIS 242 with a minimum grade of 2.5 or instructor permission",
      objectives: [
          "Understand the difference between client-side and server-side scripting.",
          "Use the appropriate script, client-side or server-side to complete an interactive website with a data repository.",
          "Use Model, View, Controller (MVC) principles and architecture to build web site.",
          "Use operators including logical operators and variables in scripting language.",
          "Create procedures and reusable code in scripting language.",
          "Create web sites using web frameworks."
      ],
      offered: "Spring"
    },
    cis244: {
      title: "CIS 244 - Web Development IV: Introduction to JavaScript Frameworks",
      credits: "5.0 Credits",
      description: "Students will learn to work with open-source JavaScript frameworks. Topics include React, AngularJS, Vue.js, and other commonly used JavaScript frameworks. Students will use the frameworks to create and update content on a website. Students will apply their knowledge to build a custom multi-page website.",
      prerequisite: "CIS 241 with a minimum grade of 2.5 or instructor permission.",
      objectives: [
        "Determine the business model of a website such as business-to-business, business-to-customer, large organization vs small organization, brick and mortar vs E-commerce, social networking, and blog.",
"Compare and contrast top JavaScript frameworks.",
"Develop and implement content using JavaScript.",
"Develop a responsive and accessible website using current technologies and JavaScript frameworks.",
"Create an ongoing plan to maintain and update a website.",
      ],
      offered: "Winter"
    },
    cis245: {
      title: "CIS 245 - Web Development V: Introduction to CSS",
      credits: "5.0 Credits",
      description: "Students will learn the details required to combine CSS (Cascading Style Sheets) with HTML or XML to create rich, powerful websites. Topics include: selectors, cascade and inheritance, text and font manipulation, layout, and positioning; SASS (Syntactically Awesome Style Sheets) and LESS (Leaner CSS) style sheet languages; and Bootstrap framework.",
      prerequisite: "CIS 241 with a minimum grade of 2.5 or instructor permission.", 
      objectives: [
       "Create websites using CSS for page layout as inline style, internal stylesheets, and external stylesheets.",
        "Create and use CSS selectors to affect the elements of a web page.",
        "Apply advanced techniques of CSS, such as SASS (Syntactically Awesome Style Sheets) and LESS (Leaner CSS) style sheet languages within web pages and sites.",
        "Communicate the advantages and disadvantages of web page layout using CSS.",
        "Demonstrate the ability to create web pages or sites, which acknowledgethe differences in access capabilities across cultures.",
        "Demonstrate the ability to work collaboratively within groups.",
              ],
      offered: "Winter"
    },
    cis246: {
      title: "CIS 246 - Web Dev VI: JavaScript Frameworks",
      credits: "5.0 Credits",
      description: "Students will investigate and use the advanced techniques available in JavaScript frameworks (libraries) such as JQuery, AJAX, MooTools, AngularJS, ReactJS, and Prototype.",
      prerequisite: "CIS 242 with a minimum grade of 2.5 or instructor permission.",
      objectives: [
"Create websites using JavaScript framework libraries.",
"Read, modify, and create XML documents through AJAX libraries.",
"Create advanced user interface using JQuery, AJAX, MooTools, AngularJS, and Prototype.",
"Incorporate advanced scripting techniques into web pages and websites.",
"Make clear decisions and use the appropriate JavaScript framework technology as needed within a web page or site.",
"Communicate the advantages and disadvantages of each of the different JavaScript framework technologies.",
      ],
      offered: "Spring"
    },
    cis291: {
      title: "CIS 291 - Technology Internship",
      credits: "1.0 to 10.0 Credits (Take 4 credits)",
      description: "This variable credit course (1 to 10 credits) allows students to obtain an internship in the information technology field in order to further develop their skills and abilities in a hands-on environment. Each student must set up their internship with another entity for this class. One credit is awarded for each 30 hours worked. Registration by permit code only; obtain code from instructor. Registration permitted first seven weeks (six in summer) as space is available.",
      prerequisite: "CIS 151 or CIS 243 with a minimum grade of 2.5 and instructor",
      objectives: [
          "Document and acquire IT skill set; goals and work schedule set by the student and coordinator in the internship agreement and learning objectives pages of the internship paperwork."
      ],
      offered: "All quarters by arrangement"
    },
    cs115: {
      title: "CS 115 - Principles of Computer Science",
      credits: "5.0 Credits",
      description: "Introduces fundamental concepts needed for computer programmingand computational thinking. Includes an introduction to logical reasoning, procedural decomposition, conditionals, iteration, problem solving, and abstraction.No previous programming experience is expected.",
      prerequisite: "Completion of MATH 93 or MATH 97 with a minimum grade of 2.0 or placement above MATH 97 or instructor permission.",
      objectives: [
"Distinguish the field of computer science from programming. Including descibing some of the fundementals of computer science such as how data is stored, binary numbers, searching and sorting. ",
"Interpret code and determine its output without running it.",
"Translate a given algorithm into a working program in a given programming language with output matching a provided specification.",
"Given a simple program with errors, apply debugging techniques to find and fix the problems.",
"Determine the correct logical construct to use to solve a programming problem.",
"Write maintainable code that matches a provided style guide.",
"Describe what code does to both technical and non-technical audiences. ",
      ],
      offered: "Full Year"
    },
    art225: {
      title: "ART 225 - Introduction to Graphic Design", 
      credits: "5.0 Credits",
      description: "Graphic design, its history, imaging and the elements and principles of digital design in visual communication. An introduction to computer graphic design production tools and processes in visual illustration.",
      prerequisite: "None",
      objectives: [
      "Effectively apply techniques and skills of good craftsmanship to completed graphic design projects and course assignments.",
"Effectively generate, consider, and evaluate problems in graphic design.",
"Produce quality work through the application of a variety of graphic design techniques and media.",
"Demonstrate knowledge of basic compositional guidelines for graphic design and apply them effectively to completed course projects and assignments.",
"Give and receive constructive critiques of graphic design projects using language appropriate to the domain and course themes.",
"Demonstrate research skills in the history of design for presentation and using proper documentation of research.",
      ],
      offered: "Full Year"
    }
  };

  function openCourseModal(courseId) {
    console.log('Opening modal for:', courseId);
    const modal = document.getElementById('courseModal');
    const modalTitle = document.getElementById('modalTitle');
    const modalContent = document.getElementById('modalContent');
    const course = courseDetails[courseId];

    if (!course) {
      console.error('Course not found:', courseId);
      return;
    }

    modalTitle.textContent = course.title;
    
    modalContent.innerHTML = 
      '<div class="space-y-6">' +
        '<div class="flex justify-between items-start">' +
          '<h3 class="text-2xl font-bold text-gray-800">' + course.title + '</h3>' +
          '<span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full font-semibold">' + course.credits + '</span>' +
        '</div>' +
        '<div class="bg-blue-50 p-4 rounded-lg">' +
          '<p class="text-gray-700 leading-relaxed">' + course.description + '</p>' +
        '</div>' +
        '<div class="grid md:grid-cols-2 gap-6">' +
          '<div class="bg-green-50 p-4 rounded-lg">' +
            '<h4 class="font-bold text-green-800 mb-2">Prerequisite</h4>' +
            '<p class="text-green-700">' + course.prerequisite + '</p>' +
          '</div>' +
          '<div class="bg-purple-50 p-4 rounded-lg">' +
            '<h4 class="font-bold text-purple-800 mb-2">Course Typically Offered</h4>' +
            '<p class="text-purple-700">' + course.offered + '</p>' +
          '</div>' +
        '</div>' +
        '<div class="bg-gray-50 p-6 rounded-lg">' +
          '<h4 class="font-bold text-gray-800 mb-4">Course-level Learning Objectives (CLOs)</h4>' +
          '<p class="text-gray-700 mb-4">Upon successful completion of this course, students will be able to:</p>' +
          '<ol class="list-decimal list-inside space-y-2 text-gray-700">' +
            course.objectives.map(function(obj) { return '<li>' + obj + '</li>'; }).join('') +
          '</ol>' +
        '</div>' +
      '</div>';

    modal.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
  }

  function closeCourseModal() {
    const modal = document.getElementById('courseModal');
    modal.classList.add('hidden');
    document.body.style.overflow = 'auto';
  }

  // Wait for DOM to load
  document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM loaded, setting up event listeners');
    
    // Add event listeners to all course detail buttons
    document.querySelectorAll('.course-detail-btn').forEach(function(button) {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        const courseId = this.getAttribute('data-course');
        console.log('Button clicked for course:', courseId);
        openCourseModal(courseId);
      });
    });

    // Close modal button
    const closeBtn = document.getElementById('closeModalBtn');
    if (closeBtn) {
      closeBtn.addEventListener('click', closeCourseModal);
    }

    // Print button
    const printBtn = document.getElementById('printBtn');
    if (printBtn) {
      printBtn.addEventListener('click', function() { window.print(); });
    }

    // Close modal when clicking outside
    const modal = document.getElementById('courseModal');
    if (modal) {
      modal.addEventListener('click', function(e) {
        if (e.target === this) {
          closeCourseModal();
        }
      });
    }

    // Close modal with Escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        closeCourseModal();
      }
    });
  });
</script>