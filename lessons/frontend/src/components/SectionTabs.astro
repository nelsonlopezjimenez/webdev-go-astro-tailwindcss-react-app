---
interface Props {
  sectionData: any;
  meta: any;
  syllabus: any;
  courseInfo: any;
  syllabusData: any;
}

const { sectionData, meta, syllabus, courseInfo, syllabusData } = Astro.props;
// console.log("line 11", syllabus.resources)
---

<!-- Tab Navigation -->
<div class="bg-white shadow-sm sticky top-0 z-10">
  <div class="max-w-7xl mx-auto px-6">
    <nav class="flex space-x-8">
      <button 
        class="tab-btn py-4 px-2 border-b-2 border-blue-500 text-blue-600 font-medium text-sm"
        data-tab="lessons"
      >
        Lessons ({sectionData.lessons.length})
      </button>
      <button 
        class="tab-btn py-4 px-2 border-b-2 border-transparent text-gray-500 font-medium text-sm"
        data-tab="syllabus"
      >
        Syllabus
      </button>
      <button 
        class="tab-btn py-4 px-2 border-b-2 border-transparent text-gray-500 font-medium text-sm"
        data-tab="schedule"
      >
        Weekly Schedule
      </button>
    </nav>
  </div>
</div>

<!-- Tab Content -->
<div class="max-w-7xl mx-auto px-6 py-8">
  
  <!-- Lessons Tab -->
  <div id="lessons-tab" class="tab-content">
    <div>
      {sectionData.lessons.length > 0 && (
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          {sectionData.lessons.map((lesson) => {
            const weekInSection = lesson.week - sectionData.week_start + 1;
            return (
              <div class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-200 overflow-hidden">
                <div class="bg-gradient-to-r from-blue-500 to-blue-600 text-white p-4">
                  <div class="flex items-center justify-between">
                    <span class="bg-white bg-opacity-20 backdrop-blur-sm px-3 py-1 rounded-full text-sm font-medium">
                      Week {weekInSection}
                    </span>
                    <span class="text-2xl">{meta.icon}</span>
                  </div>
                </div>
                
                <div class="p-6">
                  <h3 class="text-xl font-bold text-gray-800 mb-3">
                    {lesson.title}
                  </h3>
                  
                  <div>
                    {lesson.description && (
                      <p class="text-gray-600 mb-4">
                        {lesson.description}
                      </p>
                    )}
                  </div>
                  
                  <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
                    <span>Global Week {lesson.week}</span>
                    <span>{new Date(lesson.created_at).toLocaleDateString()}</span>
                  </div>
                  
                  <a 
                    href={`/lessons/${lesson.week}`}
                    class="block w-full text-center bg-blue-600 text-white px-4 py-3 rounded-lg hover:bg-blue-700 transition-colors font-medium"
                  >
                    Start Lesson
                  </a>
                </div>
              </div>
            );
          })}
        </div>
      )}

      {sectionData.lessons.length === 0 && (
        <div class="text-center py-16">
          <div class="text-8xl mb-6">ðŸ“š</div>
          <h2 class="text-3xl font-bold text-gray-800 mb-4">Lessons Coming Soon</h2>
          <p class="text-xl text-gray-600 max-w-2xl mx-auto">
            This section is being prepared with amazing content. Check back soon for new lessons!
          </p>
        </div>
      )}
    </div>
  </div>

  <!-- Enhanced Syllabus Tab -->
  <div id="syllabus-tab" class="tab-content hidden">
    <div class="grid lg:grid-cols-3 gap-8">
      <!-- Course Overview -->
      <div class="lg:col-span-2 space-y-8">
        
        <!-- Course Description -->
        <div class="bg-white rounded-xl shadow-lg p-8">
          <h2 class="text-2xl font-bold text-gray-800 mb-4">Course Description</h2>
          <p class="text-gray-700 leading-relaxed">
            {syllabus.description}
          </p>
        </div>

        <!-- Academic Integrity Statement -->
        <div class="bg-red-50 border border-red-200 rounded-xl shadow-lg p-8">
          <h2 class="text-2xl font-bold text-red-800 mb-4">STATEMENT ON ACADEMIC INTEGRITY</h2>
          <p class="text-gray-700 leading-relaxed">
            Edmonds CC students shall demonstrate Academic Integrity. I am expected to report all violations of Academic Integrity (cheating and plagiarism) to the College. The College's database of such incidents will be monitored by the Office of the Vice President for Student Services. Data will be maintained for three years. Evidence of repeat incidents will result in additional action by the Office of the Vice President for Student Services as governed by the Student Code of Conduct. In this class, cheating and plagiarism will result in an assignment or grade penalty ranging from "0" on an assignment to an "F" in the course.
          </p>
        </div>

        <!-- Final Exam Information -->
        <div class="bg-yellow-50 border border-yellow-200 rounded-xl shadow-lg p-8">
          <h2 class="text-2xl font-bold text-yellow-800 mb-4">FINAL EXAM AND LAST MEETING OF CLASS</h2>
          <ul class="list-disc list-inside text-gray-700 space-y-2">
            <li>The final exam will be in-class on <strong>WEEK TENTH, Thursday June 12, 2020</strong>, provided that Covid-19 situation is contained.</li>
          </ul>
        </div>

        <!-- Disability Services -->
        <div class="bg-blue-50 border border-blue-200 rounded-xl shadow-lg p-8">
          <h2 class="text-2xl font-bold text-blue-800 mb-4">SERVICES FOR STUDENTS WITH DISABILITIES</h2>
          <p class="text-gray-700 leading-relaxed">
            If you require an accommodation for a disability, please contact the <strong class="text-blue-600">Dean of Corrections Education Brent Arbes</strong>
          </p>
        </div>

        <!-- Course Expectations -->
        <div class="bg-white rounded-xl shadow-lg p-8">
          <h2 class="text-2xl font-bold text-gray-800 mb-6">COURSE EXPECTATIONS</h2>
          
          <div class="grid md:grid-cols-2 gap-6">
            <div class="bg-blue-50 p-6 rounded-lg">
              <h3 class="text-lg font-semibold text-blue-900 mb-4">Students:</h3>
              <ul class="list-disc list-inside text-gray-700 space-y-3">
                <li>Submit all assignments by the due dates specified in Canvas.</li>
                <li>Send all assignments in Canvas.</li>
                <li>Ensure your name is on your assignment at the top of the first page.</li>
              </ul>
            </div>

            <div class="bg-green-50 p-6 rounded-lg">
              <h3 class="text-lg font-semibold text-green-900 mb-4">Instructor:</h3>
              <ul class="list-disc list-inside text-gray-700 space-y-3">
                <li>I will return email messages within 24 hours, usually much sooner.</li>
                <li>I will grade and return all assignments within seven/ten days.</li>
                <li>I will monitor the discussion board on a daily basis, provided that students have access to it.</li>
                <li>I will post all grades and points on the canvas course student grade book.</li>
              </ul>
            </div>
          </div>
        </div>

        <!-- Important Note -->
        <div class="bg-yellow-50 border-l-4 border-yellow-400 rounded-lg shadow-lg p-8">
          <h3 class="text-lg font-semibold text-yellow-900 mb-3">Important Note</h3>
          <p class="text-gray-700 leading-relaxed">
            Successful completion of student responsibilities in this class requires class attendance and online access to Canvas. From April 13 through May 5 remote mode, after May 5 face-to-face mode. You are expected to attend class and log in to your laptop. Instructions for access to Canvas and student technical support{' '}
            <a 
              href="http://www.edcc.edu/elearning" 
              target="_blank" 
              rel="noopener noreferrer"
              class="text-blue-600 underline hover:text-blue-800"
            >
              (full URL: http://www.edcc.edu/elearning)
            </a>.
          </p>
        </div>

        <!-- Learning Objectives -->
        <div class="bg-white rounded-xl shadow-lg p-8">
          <h2 class="text-2xl font-bold text-gray-800 mb-6">Learning Objectives</h2>
          <p class="text-gray-600 mb-4">Upon successful completion of this course, students will be able to:</p>
          <ul class="space-y-3">
            {syllabus.objectives && syllabus.objectives.map((objective, index) => (
              <li class="flex items-start">
                <span class="bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-bold mr-3 mt-0.5 flex-shrink-0">
                  {index + 1}
                </span>
                <span class="text-gray-700">{objective}</span>
              </li>
            ))}
          </ul>
        </div>

        <!-- Course Topics -->
        <div class="bg-white rounded-xl shadow-lg p-8">
          <h2 class="text-2xl font-bold text-gray-800 mb-6">Course Topics</h2>
          <div class="grid md:grid-cols-2 gap-4">
            {syllabus.topics && syllabus.topics.map((topic) => (
              <div class="flex items-center p-3 bg-gray-50 rounded-lg">
                <div class="w-2 h-2 bg-blue-500 rounded-full mr-3 flex-shrink-0"></div>
                <span class="text-gray-700 text-sm">{topic}</span>
              </div>
            ))}
          </div>
        </div>
      </div>

      <!-- Sidebar Information -->
      <div class="space-y-6">
        
        <!-- Course Details -->
        <div class="bg-white rounded-xl shadow-lg p-6">
          <h3 class="text-lg font-bold text-gray-800 mb-4">Course Details</h3>
          <div class="space-y-3">
            <div class="flex justify-between">
              <span class="text-gray-600">Course Code</span>
              <span class="font-semibold">{courseInfo.courseCode}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-gray-600">Credits</span>
              <span class="font-semibold">{courseInfo.credits}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-gray-600">Quarter</span>
              <span class="font-semibold">{meta.quarter}</span>
            </div>
            <div class="pt-3 border-t border-gray-200">
              <span class="text-gray-600 text-sm">Prerequisites</span>
              <p class="text-sm text-gray-800 mt-1">{courseInfo.prerequisites}</p>
            </div>
          </div>
        </div>

        <!-- Assessment -->
        <div class="bg-white rounded-xl shadow-lg p-6">
          <h3 class="text-lg font-bold text-gray-800 mb-4">Assessment</h3>
          <div class="space-y-3">
            {syllabus.assessment && syllabus.assessment.map((item) => (
              <div class="text-sm text-gray-700">{item}</div>
            ))}
          </div>
        </div>

         <!-- Resources -->
        <div class="bg-white rounded-xl shadow-lg p-6">
          <h3 class="text-lg font-bold text-gray-800 mb-4">Resources</h3>
          <div class="space-y-2">
            {syllabus.resources && syllabus.resources.map((resource) => (
              <div class="flex items-start text-sm">
                <div class="w-2 h-2 bg-blue-500 rounded-full mr-2 mt-2 flex-shrink-0"></div>
                {typeof resource === 'string' ? (
                  <span class="text-gray-700" set:html={resource}></span>
                ) : resource.url ? (
                  <a 
                    href={resource.url}
                    target="_blank" 
                    rel="noopener noreferrer"
                    class="text-blue-600 underline hover:text-blue-800 transition-colors"
                  >
                    {resource.text}
                  </a>
                ) : (
                  <span class="text-gray-700">{resource.text}</span>
                )}
              </div>
            ))}
          </div>
        </div>


        <!-- Data Source Indicator -->
        <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
          <div class="flex items-center">
            <svg class="w-4 h-4 text-blue-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
            </svg>
            <span class="text-xs text-blue-700">
              {syllabusData ? 'Live course data' : 'Sample course data'}
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Schedule Tab -->
  <div id="schedule-tab" class="tab-content hidden">
    <div class="bg-white rounded-xl shadow-lg p-8">
      <h2 class="text-2xl font-bold text-gray-800 mb-6">Weekly Schedule</h2>
      
      <div class="space-y-4">
        {Array.from({length: 12}, (_, i) => {
          const weekNumber = i + 1;
          const globalWeek = sectionData.week_start + i;
          const lesson = sectionData.lessons.find(l => l.week === globalWeek);
          const isAvailable = lesson !== undefined;
          
          return (
            <div class="border rounded-lg p-6 border-gray-200 bg-gray-50">
              <div class="flex items-center justify-between">
                <div class="flex-1">
                  <div class="flex items-center gap-4 mb-2">
                    <span class="font-bold text-lg text-gray-500">
                      Week {weekNumber}
                    </span>
                    <span class="text-sm text-gray-500">
                      (Global Week {globalWeek})
                    </span>
                    <div>
                      {isAvailable && (
                        <span class="bg-blue-500 text-white px-2 py-1 rounded-full text-xs font-medium">
                          Available
                        </span>
                      )}
                    </div>
                  </div>
                  
                  <h3 class="text-lg font-semibold text-gray-500">
                    {lesson ? lesson.title : `Week ${weekNumber} - Coming Soon`}
                  </h3>
                  
                  <div>
                    {lesson && lesson.description && (
                      <p class="text-gray-600 mt-2">{lesson.description}</p>
                    )}
                  </div>
                  
                  <div>
                    {lesson && lesson.created_at && (
                      <p class="text-sm text-gray-500 mt-2">
                        Published: {new Date(lesson.created_at).toLocaleDateString()}
                      </p>
                    )}
                  </div>
                </div>
                
                <div class="ml-6">
                  <div>
                    {isAvailable && (
                      <a 
                        href={`/lessons/${globalWeek}`}
                        class="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors font-medium"
                      >
                        View Lesson
                      </a>
                    )}
                    {!isAvailable && (
                      <div class="bg-gray-300 text-gray-500 px-6 py-2 rounded-lg cursor-not-allowed font-medium">
                        Not Available
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const tabButtons = document.querySelectorAll('.tab-btn');
  const tabContents = document.querySelectorAll('.tab-content');
  
  function switchTab(targetTab) {
    tabButtons.forEach(function(button) {
      button.classList.remove('border-blue-500', 'text-blue-600');
      button.classList.add('border-transparent', 'text-gray-500');
    });
    
    tabContents.forEach(function(content) {
      content.classList.add('hidden');
    });
    
    const targetContent = document.getElementById(targetTab + '-tab');
    if (targetContent) {
      targetContent.classList.remove('hidden');
    }
    
    const targetButton = document.querySelector('[data-tab="' + targetTab + '"]');
    if (targetButton) {
      targetButton.classList.add('border-blue-500', 'text-blue-600');
      targetButton.classList.remove('border-transparent', 'text-gray-500');
    }
  }
  
  tabButtons.forEach(function(button) {
    button.addEventListener('click', function() {
      const tabName = this.getAttribute('data-tab');
      switchTab(tabName);
    });
  });
  
  switchTab('lessons');
});
</script>